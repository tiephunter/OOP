/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;

/**
 *
 * @author admin
 */
public class Dictionary extends javax.swing.JFrame {

    /**
     * Creates new form Dictionary
     */
    public Dictionary() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
    }
    ArrayList<Word> listWords = new ArrayList<>();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfEn = new javax.swing.JTextField();
        tfVn = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel1.setText("Dictionary");

        jLabel2.setText("En");

        jLabel3.setText("VN");

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAdd.setText("Bổ sung");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfVn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfEn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(btnSearch)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd)))
                .addContainerGap(111, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfEn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfVn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnAdd))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
      // TODO add your handling code here:
        if(!tfEn.getText().equals("")){
            int kq = searchBinary(tfEn.getText());
            if(kq == -1){
                JOptionPane.showMessageDialog(rootPane,"Khong tim thay tu cần tìm kiếm");
            }
            else{
                tfVn.setText(listWords.get(kq).getVn());
            }
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập từ cần tìm kiếm");
            return;
        }
        /*
        if (tfEn.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ban chua nhap tu can tim");
            return;
        } 
        else if (searchBinary(tfEn.getText()) == -1) {
            //khong tim thay tu do
            JOptionPane.showMessageDialog(null, "Từ bạn cần tìm ko có trong từ điển");
            JOptionPane.showMessageDialog(null, "Vui lòng nhập lại từ cần tìm");
        }
        else {
            Word w = (Word) listWords.get(searchBinary(tfEn.getText()));
            tfVn.setText(w.getVn());
        }*/
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(tfEn.getText().equals("")&&tfVn.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Mời bạn nhập từ cần bổ sung");
            return;
        }
        else if(tfEn.getText().equals("")||tfVn.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Ban chưa nhập đủ để bổ sung");
            return;
        }
        else{
            for (Word word: listWords) {
                if (tfEn.getText().equals(word.getEn())) {
                    JOptionPane.showMessageDialog(rootPane,"Từ này đã có trong từ điển");
                    return;
                }
            }
            Word w = new Word(listWords.size()+1,tfVn.getText(),tfVn.getText());
            listWords.add(w);
            Sort();
            inTuDien();
            System.out.println("----------------------------");
            JOptionPane.showMessageDialog(rootPane,"Bổ sung thành công");
            tfEn.setText("");
            tfVn.setText("");
            
        }
        
    }//GEN-LAST:event_btnAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dictionary().setVisible(true);
            }
        });
    }
    public void listBanDau(){
        Word w1 = new Word(1,"one","một");
        Word w2 = new Word(2,"two","hai");
        Word w3 = new Word(3,"three","ba");
        Word w4 = new Word(4,"for","bốn");
        Word w5 = new Word(5,"five","năm");
        Word w6 = new Word(6,"six","sáu");
        Word w7 = new Word(7,"seven","bảy");
        Word w8 = new Word(8,"eight","tám");  
        Word w9 = new Word(9,"nine","chín");
        Word w10 = new Word(10,"ten","mười");
        listWords.add(w1);
        listWords.add(w2);
        listWords.add(w3);
        listWords.add(w4);
        listWords.add(w5);
        listWords.add(w6);
        listWords.add(w7);
        listWords.add(w8);
        listWords.add(w9);
        listWords.add(w10);
        Sort();
        inTuDien();
        System.out.println("----------------------------");
    }

    public void inTuDien(){
        for (Word i : listWords) {
            i.hienThiThongTin();
        }
    }
    
    public void Sort(){
        Collections.sort(listWords, new Comparator<Word>(){
            @Override
            public int compare(Word w1, Word w2){
                return (w1.getEn().compareToIgnoreCase(w2.getEn()));
            }
        });
    }
    
    public int searchBinary(String s){
        int left = 1; int right = listWords.size()-1;
        int mid;
        int kq = -1;
        while(left<=right){
            mid=(left+right)/2;
            Word wmid = listWords.get(mid);
            if(wmid.getEn().equals(s)){
                return mid;
            }
            else if(wmid.getEn().compareToIgnoreCase(s)>0){
                right = mid - 1;
            }
            else{
                left = mid +1;
            }
        }
        return kq;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField tfEn;
    private javax.swing.JTextField tfVn;
    // End of variables declaration//GEN-END:variables
}
